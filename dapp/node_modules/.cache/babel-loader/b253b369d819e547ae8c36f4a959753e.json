{"ast":null,"code":"import isArrayLike from './_isArrayLike.js';\nimport values from './values.js';\nimport cb from './_cb.js';\nimport each from './each.js'; // Return the minimum element (or element-based computation).\n\nexport default function min(obj, iteratee, context) {\n  var result = Infinity,\n      lastComputed = Infinity,\n      value,\n      computed;\n\n  if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n    obj = isArrayLike(obj) ? obj : values(obj);\n\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n\n      if (value != null && value < result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = cb(iteratee, context);\n    each(obj, function (v, index, list) {\n      computed = iteratee(v, index, list);\n\n      if (computed < lastComputed || computed === Infinity && result === Infinity) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n\n  return result;\n}","map":null,"metadata":{},"sourceType":"module"}